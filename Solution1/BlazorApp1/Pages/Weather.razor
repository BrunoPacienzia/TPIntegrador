
@page "/"
@inject HttpClient Http
@using System.Net.Http.Headers;
@using Domain.Model;

<PageTitle>Especialidades</PageTitle>

<h1>Especialidad</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Descripcion</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.EspecialidadId</td>
                    <td>@forecast.Descripcion</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Especialidad> forecasts = [];

    protected override async Task OnInitializedAsync()
    {
        EspecialidadApiClient client = new EspecialidadApiClient();
   
        forecasts = await EspecialidadApiClient.GetAllAsync();
    }

    public class EspecialidadApiClient
    {
        private static HttpClient client = new HttpClient();
        static EspecialidadApiClient()
        {
            client.BaseAddress = new Uri("https://localhost:7271/");
            client.DefaultRequestHeaders.Accept.Clear();
            client.DefaultRequestHeaders.Accept.Add(
                new MediaTypeWithQualityHeaderValue("application/json"));
        }

        public static async Task<IEnumerable<Especialidad>> GetAllAsync()
        {
            IEnumerable<Especialidad> especialidades = null;
            HttpResponseMessage response = await client.GetAsync("especialidades");
            if (response.IsSuccessStatusCode)
            {
                especialidades = await response.Content.ReadAsAsync<IEnumerable<Especialidad>>();

            }
            return especialidades;
        }

    }
}

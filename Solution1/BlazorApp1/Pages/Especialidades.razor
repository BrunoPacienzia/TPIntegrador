@page "/"
@inject HttpClient Http
@using System.Net.Http.Headers
@using Domain.Model

<PageTitle>Especialidades</PageTitle>

<h1 class="text-center my-4">Listado de Especialidades</h1>

@if (forecasts == null)
{
    <div class="text-center my-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-3"><em>Cargando especialidades...</em></p>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">Descripción</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.EspecialidadId</td>
                        <td>@forecast.Descripcion</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private IEnumerable<Especialidad> forecasts = null;

    protected override async Task OnInitializedAsync()
    {
        EspecialidadApiClient client = new EspecialidadApiClient();
        forecasts = await EspecialidadApiClient.GetAllAsync();
    }

    public class EspecialidadApiClient
    {
        private static HttpClient client = new HttpClient();

        static EspecialidadApiClient()
        {
            client.BaseAddress = new Uri("https://localhost:7271/");
            client.DefaultRequestHeaders.Accept.Clear();
            client.DefaultRequestHeaders.Accept.Add(
                new MediaTypeWithQualityHeaderValue("application/json"));
        }

        public static async Task<IEnumerable<Especialidad>> GetAllAsync()
        {
            IEnumerable<Especialidad> especialidades = null;
            HttpResponseMessage response = await client.GetAsync("especialidades");
            if (response.IsSuccessStatusCode)
            {
                especialidades = await response.Content.ReadAsAsync<IEnumerable<Especialidad>>();
            }
            return especialidades;
        }
    }
}
